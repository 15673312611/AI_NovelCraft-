version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: novel-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ai_novel
      MYSQL_USER: novel_user
      MYSQL_PASSWORD: novel123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - novel-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: novel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - novel-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: novel-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ai_novel?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: novel_user
      SPRING_DATASOURCE_PASSWORD: novel123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - mysql
      - redis
    networks:
      - novel-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: novel-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - novel-network

volumes:
  mysql_data:
  redis_data:

networks:
  novel-network:
    driver: bridge 